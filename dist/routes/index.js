"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = __importDefault(require("express"));
var userSignup_1 = __importDefault(require("../controllers/userSignup"));
var verifyUser_1 = __importDefault(require("../controllers/verifyUser"));
var createAdmin_1 = __importDefault(require("../controllers/createAdmin"));
var userLogin_1 = __importDefault(require("../controllers/userLogin"));
var adminLogin_1 = __importDefault(require("../controllers/adminLogin"));
var makeTransaction_1 = __importDefault(require("../controllers/makeTransaction"));
var auth_1 = __importDefault(require("../middleware/auth"));
var changeAccountType_1 = __importDefault(require("../controllers/changeAccountType"));
var changeMainCurrency_1 = __importDefault(require("../controllers/changeMainCurrency"));
var approveFunding_1 = __importDefault(require("../controllers/approveFunding"));
var adminFundingWallet_1 = __importDefault(require("../controllers/adminFundingWallet"));
var findData_1 = require("../controllers/findData");
var deleteItem_1 = require("../controllers/deleteItem");
var findByCategory_1 = require("../controllers/findByCategory");
var passwordReset_1 = require("../controllers/passwordReset");
var router = express_1.default.Router();
router.post("/signup", userSignup_1.default);
router.put("/verifyuser/:email", verifyUser_1.default);
router.post("/admin", createAdmin_1.default);
router.post("/userlogin", userLogin_1.default);
router.post("/adminlogin", adminLogin_1.default);
router.post("/transaction/:id", auth_1.default, makeTransaction_1.default);
router.put("/changeaccount/:id", auth_1.default, changeAccountType_1.default);
router.put("/changemain/:id", auth_1.default, changeMainCurrency_1.default);
router.put("/approvefund/:id", auth_1.default, approveFunding_1.default);
router.put("/fundbyadmin/:id", auth_1.default, adminFundingWallet_1.default);
router.get("/findusers", findData_1.findUsers);
router.get("/finduser/:id", findData_1.findUser);
router.get("/findtransactions", findData_1.findTransactions);
router.get("/findtransaction/:id", findData_1.findTransaction);
router.delete("/deleteuser/:id", deleteItem_1.deleteUser);
router.delete("/deletetransaction/:id", deleteItem_1.deleteTransaction);
router.get("/usersbycategory/:accountType", findByCategory_1.findUsersByCategory);
router.get("/transactionsbycategory/:transactionType", findByCategory_1.findTransactionsByCategory);
router.post("/passwordreset", passwordReset_1.requestPasswordReset);
router.put("/passwordreset/:token", passwordReset_1.changePassword);
exports.default = router;
